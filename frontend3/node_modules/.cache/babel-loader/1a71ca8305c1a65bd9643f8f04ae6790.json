{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\chae190702\\\\frontend3\\\\src\\\\containers\\\\customer\\\\TodoApp.jsx\";\nimport React, { Component } from 'react';\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"TODO\"), React.createElement(TodoList, {\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"new-todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"What needs to be done?\"), React.createElement(\"input\", {\n      id: \"new-todo\",\n      onChange: this.handleChange,\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Add #\", this.state.items.length + 1)));\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.text.length) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.items.map(item => React.createElement(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, item.text)));\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["C:\\Users\\user\\chae190702\\frontend3\\src\\containers\\customer\\TodoApp.jsx"],"names":["React","Component","TodoApp","constructor","props","state","items","text","handleChange","bind","handleSubmit","render","length","e","setState","target","value","preventDefault","newItem","id","Date","now","concat","TodoList","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAM,MAAA,QAAQ,EAAE,KAAKI,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAIE;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,QAAQ,EAAE,KAAKF,YAFjB;AAGE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,IAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,KAAKF,KAAL,CAAWC,KAAX,CAAiBM,MAAjB,GAA0B,CADlC,CATF,CAHF,CADF;AAmBD;;AAEDJ,EAAAA,YAAY,CAACK,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAEM,CAAC,CAACE,MAAF,CAASC;AAAjB,KAAd;AACD;;AAEDN,EAAAA,YAAY,CAACG,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI,CAAC,KAAKZ,KAAL,CAAWE,IAAX,CAAgBK,MAArB,EAA6B;AAC3B;AACD;;AACD,UAAMM,OAAO,GAAG;AACdX,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IADH;AAEdY,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFU,KAAhB;AAIA,SAAKP,QAAL,CAAcT,KAAK,KAAK;AACtBC,MAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYgB,MAAZ,CAAmBJ,OAAnB,CADe;AAEtBX,MAAAA,IAAI,EAAE;AAFgB,KAAL,CAAnB;AAID;;AA/CyB;;AAkD5B,MAAMgB,QAAN,SAAuBvB,KAAK,CAACC,SAA7B,CAAuC;AACrCU,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,KAAL,CAAWE,KAAX,CAAiBkB,GAAjB,CAAqBC,IAAI,IACxB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACN,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBM,IAAI,CAAClB,IAAxB,CADD,CADH,CADF;AAOD;;AAToC;;AAW3C,eAAeL,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nclass TodoApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { items: [], text: '' };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div>\r\n            <h3>TODO</h3>\r\n            <TodoList items={this.state.items} />\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label htmlFor=\"new-todo\">\r\n                What needs to be done?\r\n              </label>\r\n              <input\r\n                id=\"new-todo\"\r\n                onChange={this.handleChange}\r\n                value={this.state.text}\r\n              />\r\n              <button>\r\n                Add #{this.state.items.length + 1}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        );\r\n      }\r\n    \r\n      handleChange(e) {\r\n        this.setState({ text: e.target.value });\r\n      }\r\n    \r\n      handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!this.state.text.length) {\r\n          return;\r\n        }\r\n        const newItem = {\r\n          text: this.state.text,\r\n          id: Date.now()\r\n        };\r\n        this.setState(state => ({\r\n          items: state.items.concat(newItem),\r\n          text: ''\r\n        }));\r\n      }\r\n    }\r\n    \r\n    class TodoList extends React.Component {\r\n      render() {\r\n        return (\r\n          <ul>\r\n            {this.props.items.map(item => (\r\n              <li key={item.id}>{item.text}</li>\r\n            ))}\r\n          </ul>\r\n        );\r\n      }\r\n    }\r\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}