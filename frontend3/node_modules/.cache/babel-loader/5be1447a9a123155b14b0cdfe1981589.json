{"ast":null,"code":"// import React, { Component } from 'react'\n// import TodoList from './TodoList'\n// class TodoApp extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = { items: [], text: '' };\n//         /* this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this */);\n//       }\n//       render() {\n//         return (\n//           <div>\n//             <h3>TODO</h3>\n//             <TodoList items={this.state.items} />\n//             <form onSubmit={this.handleSubmit}>\n//               <label htmlFor=\"new-todo\">\n//                 What needs to be done?\n//               </label>\n//               <input\n//                 id=\"new-todo\"\n//                 onChange={this.handleChange}\n//                 value={this.state.text}\n//               />\n//               <button>\n//                 Add #{this.state.items.length + 1}\n//               </button>\n//             </form>\n//           </div>\n//         );\n//       }\n//       handleChange(e) {\n//         this.setState({ text: e.target.value });                     //값을 보낸다 클릭했을떄 이벤트에서 부모한태 값을 보낸다 setState\n// }                                                            //e.target.value 이벤트가 걸릴 대상\n//       handleSubmit(e) {\n//         e.preventDefault();   //폼태그에서 전송되는 submit을 막는다\n//         if (!this.state.text.length) {\n//           return;\n//         }\n//         const newItem = {\n//           text: this.state.text,\n//           id: Date.now()\n//         };\n//         this.setState(state => ({\n//           items: state.items.concat(newItem), // 기존에 있던 배열에 배열을 추가해줌\n//           text: ''\n//         }));\n//       }\n//     }\n// export default TodoApp;","map":{"version":3,"sources":["C:\\Users\\user\\chae190702\\frontend3\\src\\containers\\customer\\TodoApp.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["// import React, { Component } from 'react'\r\n// import TodoList from './TodoList'\r\n// class TodoApp extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { items: [], text: '' };\r\n//         /* this.handleChange = this.handleChange.bind(this);\r\n//         this.handleSubmit = this.handleSubmit.bind(this */);\r\n//       }\r\n    \r\n//       render() {\r\n//         return (\r\n//           <div>\r\n//             <h3>TODO</h3>\r\n//             <TodoList items={this.state.items} />\r\n//             <form onSubmit={this.handleSubmit}>\r\n//               <label htmlFor=\"new-todo\">\r\n//                 What needs to be done?\r\n//               </label>\r\n//               <input\r\n//                 id=\"new-todo\"\r\n//                 onChange={this.handleChange}\r\n//                 value={this.state.text}\r\n//               />\r\n//               <button>\r\n//                 Add #{this.state.items.length + 1}\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         );\r\n//       }\r\n    \r\n//       handleChange(e) {\r\n//         this.setState({ text: e.target.value });                     //값을 보낸다 클릭했을떄 이벤트에서 부모한태 값을 보낸다 setState\r\n// }                                                            //e.target.value 이벤트가 걸릴 대상\r\n    \r\n//       handleSubmit(e) {\r\n//         e.preventDefault();   //폼태그에서 전송되는 submit을 막는다\r\n//         if (!this.state.text.length) {\r\n//           return;\r\n//         }\r\n//         const newItem = {\r\n//           text: this.state.text,\r\n//           id: Date.now()\r\n//         };\r\n//         this.setState(state => ({\r\n//           items: state.items.concat(newItem), // 기존에 있던 배열에 배열을 추가해줌\r\n//           text: ''\r\n//         }));\r\n//       }\r\n//     }\r\n    \r\n    \r\n   \r\n// export default TodoApp;"]},"metadata":{},"sourceType":"module"}